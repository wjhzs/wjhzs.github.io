{"meta":{"title":"魏经海个人博客","subtitle":"Welcome","description":"学习心得、资源分享、前端知识总结","author":"魏经海","url":"https://wjhzs.github.io","root":"/"},"pages":[{"title":"","date":"2020-07-24T22:52:47.943Z","updated":"2020-07-24T22:52:47.943Z","comments":true,"path":"404.html","permalink":"https://wjhzs.github.io/404.html","excerpt":"","text":""},{"title":"categories","date":"2020-07-20T03:11:08.000Z","updated":"2020-07-20T03:18:46.593Z","comments":false,"path":"categories/index.html","permalink":"https://wjhzs.github.io/categories/index.html","excerpt":"","text":"分类"},{"title":"tags","date":"2020-07-20T03:10:59.000Z","updated":"2020-07-20T03:17:59.377Z","comments":false,"path":"tags/index.html","permalink":"https://wjhzs.github.io/tags/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-07-20T04:39:37.000Z","updated":"2020-07-21T11:58:58.392Z","comments":true,"path":"custom/index.html","permalink":"https://wjhzs.github.io/custom/index.html","excerpt":"","text":"这是我觉得比较的实用的网站。感兴趣的话可以浏览看看 Jquery官网 https://jquery.com/ BootStrap官网 https://www.bootcss.com/ Vue官网 https://cn.vuejs.org/ React官网 https://reactjs.org/ 图床-免费图片上传 https://imgchr.com/ 图标库 http://www.fontawesome.com.cn/faicons/ 阿里巴巴矢量图标库 https://www.iconfont.cn/ CSS动画库 https://animate.style/ 在线生成透明ico图标 http://www.ico51.cn/ 28个纯css3 加载loading动画特效 http://demo.lanrenzhijia.com/2015/load0409/ 绿叶学习网 前端学习 http://www.lvyestudy.com/ 必应每日高清壁纸 https://bing.ioliu.cn/ 超好看的渐变色 适用前端页面css https://webgradients.com/ 音乐网站 全网音乐可听 http://tool.liumingye.cn/music/?page=homePage 视频网站 全网电影电视剧等资源 http://lab.liumingye.cn/ 链接更新中... 记得关注 资源分享贴 VSCode安装包 x64-1.39.2：百度网盘地址 提取码：c576 Photoshop CC2019 32位下载链接：百度网盘地址 提取码：s94t 64位下载链接：百度网盘地址 提取码：taqy 注册机下载链接：百度网盘地址 提取码：lkln 资源更新中...记得关注"}],"posts":[{"title":"git分支操作","slug":"git分支操作","date":"2020-08-15T02:17:29.000Z","updated":"2020-08-15T02:25:52.687Z","comments":true,"path":"2020/08/15/git分支操作/","link":"","permalink":"https://wjhzs.github.io/2020/08/15/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/","excerpt":"","text":"分支分支 将用户的提交和修改按照时间形成一条链叫做分支 总结git基本指令 git status 查看当前仓库分支的一个基本状态 git init 在本地初始化一个仓库 git add &lt;file,dir&gt; 将工作区的修改提交到暂存区 git commit -m &#39;注释&#39; 将暂存区的修改提交到分支 git log 打印提交记录 git log --pretty=oneline 在一行内打印提交记录 git reflog 打印所有的git操作记录 git branch 查看本地的所有分支 git branch -a 产看本地和远程的所有分支 git checkout -b 分支名 创建并且切换一个分支 git checkout 分支名 切换一个分支 git merge 分支名(dev) 在当前分支合并其他分支(dev) 子分支向母分支合并 git reset --hard 提交id 版本的滚动 只能是被git管理的 git diff 查看暂存区和工作区的区别 git clone url 将远程的仓库克隆到本地git push origin（远程仓库名） master （分支名） 上传远程仓库git pull origin 分支名 （fecth + commit）拉取（下载）指定分支代码合并到当前分支git fetch 拉取代码git remote add origin 仓库地址 将本地仓库和远程从仓库建立连接 git branch -D 分支名 删除本地分支 git的分支####gitflow git工作流 git 的使用流程 更多是对分支的使用 master 主分支 线上分支 和正在线上运行的代码是一致的realease 分支 预发布分支 发布前的测试dev 分支 开发分支future 分支 个人分支 功能分支bug 分支 线上代码出现bug的时候来解决bug 角色主程 1.和远程仓库过关联 2.搭建项目框架 3.上传到远程的dev分支 4.开发结束之后 将dev分支的代码 合并到master （预上线分支） 普通开发者 1.clone 代码 2.从dev分支切换出个人分支 3.在个人分支进行修改 4.将个人分支合并到dev分支 5.push dev分支 push 之前一定要先更新代码 6.将个人分支删除调重新创建","categories":[{"name":"git","slug":"git","permalink":"https://wjhzs.github.io/categories/git/"}],"tags":[{"name":"git分支","slug":"git分支","permalink":"https://wjhzs.github.io/tags/git%E5%88%86%E6%94%AF/"}],"author":"魏经海"},{"title":"Vue全局状态管理","slug":"Vue全局状态管理","date":"2020-08-10T01:04:40.000Z","updated":"2020-08-10T01:32:21.381Z","comments":true,"path":"2020/08/10/Vue全局状态管理/","link":"","permalink":"https://wjhzs.github.io/2020/08/10/Vue%E5%85%A8%E5%B1%80%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/","excerpt":"全局状态管理 1.多组件共享状态 多个组件使用同一个数据2.任何一个组件发生改变 其他的组件也要跟着发生相应的变化","text":"全局状态管理 1.多组件共享状态 多个组件使用同一个数据2.任何一个组件发生改变 其他的组件也要跟着发生相应的变化 基本使用0.下载 npm install vuex1.创建全局状态管理的实例2.注册3.在组件里使用全局状态值 a.获取渲染全局状态值 b.修改全局状态值 5大核心state 全局状态数据mutation 规定只有mutation才能修改state 通过commit方法触发action 可以放异步操作 触发mutation 通过dispatch 触发getter vuex里的计算属性 和state值进行关联 state发生改变，可以重新计算，并且可以在页面上直接使用 action 存放异步1.统一管理异步请求减少代码量2.时间旅行更加准确 vue的开发者工具 最简版1.组件里通过 $store.state 获取全局状态数据进行渲染2.通过 $store.commit 方法触发mutation 修改全局状态值 整个页面都会变 模块化1.模块化之后state的取值需要添加一级模块名 其他的三个核心不变2.可以在模块里添加命名空间 作用就是在 mutation getters actions的名字前面 添加模块名用处就是防止名字冲突 稍微复杂版1.组件里通过 $store.state 获取全局状态数据进行渲染2.通过 $store.dispath方法 触发action里的方法3.action 触发mutation进行修改全局状态值 辅助函数帮助我们减少代码量 值类型向计算属性映射mapState 将全局状态管理的state值映射到使用组价的计算属性mapGetters 将全局状态管理的getters值映射到使用组价的计算属性 函数类型向methods进行映射mapMutatio\bns 将mutation的值映射到 方法里mapActions 将actions里的值映射到方法 vue开发者工具 vue.js devtools在谷歌浏览器网上应用商店下载… 可以先下载谷歌访问助手再进应用商店 开发者工具绿了 该网页一定是vue做的vue做的网页开发者工具不一定绿","categories":[{"name":"Vue","slug":"Vue","permalink":"https://wjhzs.github.io/categories/Vue/"}],"tags":[{"name":"Vue全局状态管理模式","slug":"Vue全局状态管理模式","permalink":"https://wjhzs.github.io/tags/Vue%E5%85%A8%E5%B1%80%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E6%A8%A1%E5%BC%8F/"}],"author":"魏经海"},{"title":"测试","slug":"测试","date":"2020-07-23T03:21:44.000Z","updated":"2020-07-23T11:19:48.740Z","comments":true,"path":"2020/07/23/测试/","link":"","permalink":"https://wjhzs.github.io/2020/07/23/%E6%B5%8B%E8%AF%95/","excerpt":"","text":"","categories":[],"tags":[],"author":"魏经海"},{"title":"Mongobd","slug":"Mongobd","date":"2020-07-23T02:48:30.000Z","updated":"2020-07-23T02:51:08.563Z","comments":true,"path":"2020/07/23/Mongobd/","link":"","permalink":"https://wjhzs.github.io/2020/07/23/Mongobd/","excerpt":"","text":"非关系型数据库-mongodb","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"https://wjhzs.github.io/categories/Mongodb/"}],"tags":[{"name":"mongodb介绍","slug":"mongodb介绍","permalink":"https://wjhzs.github.io/tags/mongodb%E4%BB%8B%E7%BB%8D/"}],"author":"魏经海"},{"title":"MySQL","slug":"MySQL","date":"2020-07-23T02:47:55.000Z","updated":"2020-07-23T03:25:37.277Z","comments":true,"path":"2020/07/23/MySQL/","link":"","permalink":"https://wjhzs.github.io/2020/07/23/MySQL/","excerpt":"","text":"关系型数据库-MySQL","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://wjhzs.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL介绍","slug":"MySQL介绍","permalink":"https://wjhzs.github.io/tags/MySQL%E4%BB%8B%E7%BB%8D/"}],"author":"魏经海"},{"title":"JavaScript","slug":"JavaScript","date":"2020-07-23T02:47:34.000Z","updated":"2020-07-23T02:49:54.757Z","comments":true,"path":"2020/07/23/JavaScript/","link":"","permalink":"https://wjhzs.github.io/2020/07/23/JavaScript/","excerpt":"","text":"","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://wjhzs.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript介绍","slug":"JavaScript介绍","permalink":"https://wjhzs.github.io/tags/JavaScript%E4%BB%8B%E7%BB%8D/"}],"author":"魏经海"},{"title":"CSS","slug":"CSS","date":"2020-07-23T02:47:25.000Z","updated":"2020-07-23T03:19:40.364Z","comments":true,"path":"2020/07/23/CSS/","link":"","permalink":"https://wjhzs.github.io/2020/07/23/CSS/","excerpt":"","text":"","categories":[{"name":"CSS","slug":"CSS","permalink":"https://wjhzs.github.io/categories/CSS/"}],"tags":[{"name":"CSS介绍","slug":"CSS介绍","permalink":"https://wjhzs.github.io/tags/CSS%E4%BB%8B%E7%BB%8D/"}],"author":"魏经海"},{"title":"HTML","slug":"HTML","date":"2020-07-23T02:47:19.000Z","updated":"2020-07-23T02:49:16.958Z","comments":true,"path":"2020/07/23/HTML/","link":"","permalink":"https://wjhzs.github.io/2020/07/23/HTML/","excerpt":"","text":"","categories":[{"name":"HTML","slug":"HTML","permalink":"https://wjhzs.github.io/categories/HTML/"}],"tags":[{"name":"HTML介绍","slug":"HTML介绍","permalink":"https://wjhzs.github.io/tags/HTML%E4%BB%8B%E7%BB%8D/"}],"author":"魏经海"},{"title":"git操作","slug":"git操作","date":"2020-07-23T02:45:39.000Z","updated":"2020-08-14T11:20:39.003Z","comments":true,"path":"2020/07/23/git操作/","link":"","permalink":"https://wjhzs.github.io/2020/07/23/git%E6%93%8D%E4%BD%9C/","excerpt":"git介绍git是一款本地项目管理工具，git在使用时必须严格遵守项目git规范，否则会影响整个项目的进度和文件的整理保存。 git官网：https://github.com/ 全英文 gittee官网：https://gitee.com/ 中文版git","text":"git介绍git是一款本地项目管理工具，git在使用时必须严格遵守项目git规范，否则会影响整个项目的进度和文件的整理保存。 git官网：https://github.com/ 全英文 gittee官网：https://gitee.com/ 中文版git git的安装通过官网下载，一直点击下一步就ok！ 在任意一个文件目录下点击鼠标右键，出现Git GUI Here 和 Git Bash Here 就说明安装成功 首次使用git，要在命令行中进行以下操作： 1.git config --list 检查git全局配置 执行之后，显示的是git默认的系统配置 2.设定用户名称 git config --global usename &quot;你的用户名&quot;；用户名必须为英文，可以使用GitHub的用户名 设定用户邮箱 git config --global user.email &quot;你的电子邮箱&quot;；邮箱设定为常用的邮箱，可以正确手法邮件的邮箱 git的工作原理操作git必须严格按照以下操作步骤来进行操作 1.设定一个需要git软件来管理的项目文件夹 2.在这个目录下，鼠标右击，使用git bush here 运行程序，也可以直接在命令行操作，记得切换路径 3.运行git init 格式化当前文件夹，运行之后，会得到一个.git文件，这个文件默认是隐藏的，可以通过文件设置让它显示，这个文件十分重要，不能删除 项目问文件夹分为工作区 缓存区 历史区 工作区：平时我们编辑的执行的文件，都在工作区中，是可见的，可以编辑操作 缓存区：从工作区上传存储到缓存区，是不可见的，无法编辑操作，缓存区的内容可以回滚到工作区 历史区：从缓存区上传存储到历史区是不可见的，历史区的文件生成历史版本，可以上传到GitHub上，历史区的内容可以回滚到工作区，GitHub中的内容可以下载到工作区继续编辑 4.具体的执行命令 git status：查看缓存区中的文件 git add 文件名：上传一个文件到缓存区 git add 文件夹名：上传一个文件夹到缓存区 git add .(英文的点)/git add --all 添加项目文件夹中的所有内容到缓存区 git commit -m &quot;注释内容&quot;：将缓存区中的所有内容上传到历史区，生成历史版本 git log：查看历史版本 生成历史版本之后，当前缓存区中的所有内容会被全部释放，也就是缓存区中没有任何内容了 回滚操作1.从缓存区回滚到工作区 git reset HEAD --文件名：文件回滚 git reset HEAD --文件夹名：文件夹回滚 git reset HEAD -- .：所有文件回滚 2.切换当前使用的历史版本 git reset --hard 历史版本id （commit之后的英文串就是id） 3.历史版本一旦生成是无法删除的，新的历史版本是在之前历史版本的基础上生成的内容，如果删除了之前的历史版本，之后的内容也会受到影响，因此git的历史版本不允许删除！ 使用GitHub进行云存储git项目文件在GitHub中新建库，通过本地git将历史版本存入GitHub仓库 1.上传历史版本之前先要配置git上传信息 通过git remote add origin 仓库地址设置项目文件存储在哪个库，在git文件夹config文件中，会显示设置的这个仓库地址，如果地址需要更换，可在文件里面直接修改，或者重新输入上面那行命令 2.上传操作命令 git push -u origin master 3.下载克隆操作 git clone 仓库地址 git项目的分支操作待更新中…….","categories":[{"name":"git","slug":"git","permalink":"https://wjhzs.github.io/categories/git/"}],"tags":[{"name":"git介绍","slug":"git介绍","permalink":"https://wjhzs.github.io/tags/git%E4%BB%8B%E7%BB%8D/"}],"author":"魏经海"},{"title":"Node.js","slug":"Node-js","date":"2020-07-23T02:44:28.000Z","updated":"2020-07-23T02:45:11.813Z","comments":true,"path":"2020/07/23/Node-js/","link":"","permalink":"https://wjhzs.github.io/2020/07/23/Node-js/","excerpt":"","text":"","categories":[{"name":"Node.js","slug":"Node-js","permalink":"https://wjhzs.github.io/categories/Node-js/"}],"tags":[{"name":"node.js介绍","slug":"node-js介绍","permalink":"https://wjhzs.github.io/tags/node-js%E4%BB%8B%E7%BB%8D/"}],"author":"魏经海"},{"title":"博客写作","slug":"博客写作","date":"2020-07-21T08:26:30.000Z","updated":"2020-07-22T00:39:23.076Z","comments":true,"path":"2020/07/21/博客写作/","link":"","permalink":"https://wjhzs.github.io/2020/07/21/%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C/","excerpt":"Hexo博客写作的基本操作在阅读这篇文章之前，你也可以浏览Hexo官方文档，来熟悉写作的基础知识。Hexo写作文档","text":"Hexo博客写作的基本操作在阅读这篇文章之前，你也可以浏览Hexo官方文档，来熟悉写作的基础知识。Hexo写作文档 在熟悉写作之前，先要熟悉hexo文件目录中存放文章和页面的路径位置。&emsp; &emsp; Hexo 有三种默认布局：post、page 和 draft。在创建者三种不同类型的文件时，它们将会被保存到不同的路径。 &emsp; &emsp; 首先我们执行 hexo new post 文章标题 命令创建一篇新的文章，都将储存到 source/_posts 文件夹 执行 hexo new page 页面名称命令 创建新的页面，都会在 source/ 文件夹下自动创建一个与页面名称相同的文件夹 &emsp; &emsp; 执行hexo new draft 文章名 命令创建一个草稿文章，草稿的意思不用多说，所以，当你编辑并保存之后，通过hexo s 启动服务器之后，刷新页面并不会显示你编辑的这篇草稿；通过hexo s --``draft 启动服务器，再刷新页面就会显示你这篇草稿文章了 ，但这仅仅是显示，只有你自己能看见，别人是无法看见的，此时，执行 hexo publish 草稿文章名称 命令就可以将草稿文章发布出去了。 Front-matter&emsp; &emsp; 无论是新建文章或生成新的页面，都会有一个md文件，文件最上方以 --- 分隔的区域，就是Front-matter；主要内容就是文章的相关配置信息；标题，作者等； 举例来说： 1234---title: Hello Worlddate: 2013&#x2F;7&#x2F;13 20:46:25--- &emsp; &emsp; 这是每次新建文章之后自动生成的两个配置，是不是有点少，其他想加上去的配置还得自己动手再加上去，如果想 hexo new ... 之后其他配置就自动加上去呢，你需要去hexo主目录下找到scaffolds文件夹下找到一个post.md文件添加配置就ok了。 &emsp; &emsp; 以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。 参数 描述 默认值 layout 布局 title 标题 文章的文件名 date 建立日期 文件建立日期 updated 更新日期 文件更新日期 comments 开启文章的评论功能 true tags 标签（不适用于分页） categories 分类（不适用于分页） permalink 覆盖文章网址 keywords 仅用于 meta 标签和 Open Graph 的关键词（不推荐使用） &emsp; &emsp; 以上就是文章和页面书写的基础操作了，剩下的页面或文章内容就可以根据你的需要来写了，你可以分享自己的学习心得，学习资源等，页面内容的丰富性，以及美观性就需要你自己慢慢学习与积累了，写博客就像写代码，练习的多了，写的多了，自然就熟练了，思路也会清晰了。 支持的格式&emsp; &emsp; Hexo 支持以任何格式书写文章，只要安装了相应的渲染插件。 &emsp; &emsp; 例如，Hexo 默认安装了 hexo-renderer-marked 和 hexo-renderer-ejs，因此你不仅可以用 Markdown 写作，你还可以用 EJS 写作。如果你安装了 hexo-renderer-pug，你甚至可以用 Pug 模板语言书写文章。只需要将文章的扩展名从 md 改成 ejs，Hexo 就会使用 hexo-renderer-ejs 渲染这个文件，其他格式同理。 &emsp; &emsp; Markdown教程可参照： 菜鸟教程-markdown教程","categories":[],"tags":[],"author":"魏经海"},{"title":"Vue的安装","slug":"Vue的安装","date":"2020-07-20T12:32:44.000Z","updated":"2020-07-20T23:56:04.208Z","comments":true,"path":"2020/07/20/Vue的安装/","link":"","permalink":"https://wjhzs.github.io/2020/07/20/Vue%E7%9A%84%E5%AE%89%E8%A3%85/","excerpt":"Vue介绍Vue：一个构建用户界面的渐进式JavaScript框架","text":"Vue介绍Vue：一个构建用户界面的渐进式JavaScript框架 优点： 易用，已经学会了HTML,CSS,JavaScript,可以立刻阅读文档开始构建应用。 灵活，不断繁荣的生态系统，可以在一个库和一套完整框架之间自如伸缩。 运行效率高，采用了虚拟dom，减少了真是dom的操作。 开发效率高，采用了组件化开发，将开发者的精力从dom操作解放出来，转移到数据操作上。 Vue安装 直接在Vue官网下载Vue.js通过script标签引入 使用CDN方法：CDN: https://cdn.staticfile.org/vue/2.2.2/vue.min.js 使用npm安装先切换到淘宝下载地址：npm install -g cnpm –registry=https://registry.npm.taobao.org，然后通过：npm install vue 下载到相应的文件夹内 Vue的更新日志 每个版本的更新日志见 GitHub。","categories":[{"name":"Vue","slug":"Vue","permalink":"https://wjhzs.github.io/categories/Vue/"}],"tags":[{"name":"Vue安装方法","slug":"Vue安装方法","permalink":"https://wjhzs.github.io/tags/Vue%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/"}]},{"title":"Java面向对象概述","slug":"Java面向对象概述","date":"2020-07-20T06:05:03.000Z","updated":"2020-07-22T00:37:57.534Z","comments":true,"path":"2020/07/20/Java面向对象概述/","link":"","permalink":"https://wjhzs.github.io/2020/07/20/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%A6%82%E8%BF%B0/","excerpt":"一.面向对象思想​ 面向对象相对于于面向过程而言，都是一种思想","text":"一.面向对象思想​ 面向对象相对于于面向过程而言，都是一种思想 ​ 面向过程：强调是一个功能的步骤 ​ 面向对象：强调的是一个对象，然后由这个对象去完成相应的功能。 ​ 面向对象 特点：封装，继承，多态 ​ 好处： 1.是一种符合人们思考习惯的思想 2.可以将复杂的东西简单化 3.将程序员从执行者转为命令者 二.类与对象​ 生活中描述对象一般都是从静态属性和动态属性来描述 ​ 例：人 静态属性：名字，年龄，身高等~ 动态属性：人可以工作，打电话，说话等~ ​ 在Java语言中描述事物是通过类来完成的 静态属性–&gt;用成员变量来描述 动态属性–&gt;用成员函数（方法）来描述 ​ 对象是一个类的具体实例，Java中通过 new关键字来实现 通过一个例子来描述如下： 123456789101112131415161718class Person&#123; String name;//成员变量。 （在类与成员函数之间） int age;//成员变量 public void talk()&#123;//成员函数 &#125;&#125;class Demo&#123; public static void main(String[]args)&#123; Person p=new Person(); //通过new关键字来创建对象 p.talk();//调用函数 （格式：对象名.函数） &#125;&#125; 本网站相关的Java知识，都是自己学习Java时的个人总结，有些不对的地方请指正","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://wjhzs.github.io/tags/Java/"}]}],"categories":[{"name":"git","slug":"git","permalink":"https://wjhzs.github.io/categories/git/"},{"name":"Vue","slug":"Vue","permalink":"https://wjhzs.github.io/categories/Vue/"},{"name":"Mongodb","slug":"Mongodb","permalink":"https://wjhzs.github.io/categories/Mongodb/"},{"name":"MySQL","slug":"MySQL","permalink":"https://wjhzs.github.io/categories/MySQL/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://wjhzs.github.io/categories/JavaScript/"},{"name":"CSS","slug":"CSS","permalink":"https://wjhzs.github.io/categories/CSS/"},{"name":"HTML","slug":"HTML","permalink":"https://wjhzs.github.io/categories/HTML/"},{"name":"Node.js","slug":"Node-js","permalink":"https://wjhzs.github.io/categories/Node-js/"}],"tags":[{"name":"git分支","slug":"git分支","permalink":"https://wjhzs.github.io/tags/git%E5%88%86%E6%94%AF/"},{"name":"Vue全局状态管理模式","slug":"Vue全局状态管理模式","permalink":"https://wjhzs.github.io/tags/Vue%E5%85%A8%E5%B1%80%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E6%A8%A1%E5%BC%8F/"},{"name":"mongodb介绍","slug":"mongodb介绍","permalink":"https://wjhzs.github.io/tags/mongodb%E4%BB%8B%E7%BB%8D/"},{"name":"MySQL介绍","slug":"MySQL介绍","permalink":"https://wjhzs.github.io/tags/MySQL%E4%BB%8B%E7%BB%8D/"},{"name":"JavaScript介绍","slug":"JavaScript介绍","permalink":"https://wjhzs.github.io/tags/JavaScript%E4%BB%8B%E7%BB%8D/"},{"name":"CSS介绍","slug":"CSS介绍","permalink":"https://wjhzs.github.io/tags/CSS%E4%BB%8B%E7%BB%8D/"},{"name":"HTML介绍","slug":"HTML介绍","permalink":"https://wjhzs.github.io/tags/HTML%E4%BB%8B%E7%BB%8D/"},{"name":"git介绍","slug":"git介绍","permalink":"https://wjhzs.github.io/tags/git%E4%BB%8B%E7%BB%8D/"},{"name":"node.js介绍","slug":"node-js介绍","permalink":"https://wjhzs.github.io/tags/node-js%E4%BB%8B%E7%BB%8D/"},{"name":"Vue安装方法","slug":"Vue安装方法","permalink":"https://wjhzs.github.io/tags/Vue%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/"},{"name":"Java","slug":"Java","permalink":"https://wjhzs.github.io/tags/Java/"}]}